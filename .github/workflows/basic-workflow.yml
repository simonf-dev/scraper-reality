# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Basic workflow
on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

permissions:
  contents: read

jobs:
  testing:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Python installation
      uses: actions/setup-python@v3
      with:
        python-version: 3.9
    - name: Python environment setup
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        make dev-build
    - name: Mypy checks
      run: |
        make type-check
    - name: Pylint checks
      run: |
        make pylint-check
    - name: Tests
      run: |
        make tests
  build_deploy:
    runs-on: ubuntu-latest
    needs: testing
    if: github.ref == 'refs/heads/nosql-implementation'
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python version
        uses: actions/setup-python@v1
        with:
          python-version: '3.9'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: pip install -r requirements.txt

      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v2
        with:
          name: python-app
          path: |
            .
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build_deploy
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: python-app
          path: .

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: 'frontend-scraper'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_3E55A1C1EBB448B08A40344D46B7EF05 }}